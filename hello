decl @getint():i32
decl @getch():i32
decl @getarray(*i32):i32
decl @putint(i32)
decl @putch(i32)
decl @putarray(i32,*i32)
decl @starttime()
decl @stoptime()

global @__filed0__d = alloc i32 , zeroinit
fun @multiply(@a: i32 , @b: i32 ) : i32 { 
%entry:
%a= alloc i32
store @a, %a
%b= alloc i32
store @b, %b
%0= load %b
%1= eq %0, 0
br %1, %then0, %merge0

%then0:
ret 0
%merge0:
%2= load %b
%3= eq %2, 1
br %3, %then1, %merge1

%then1:
%4= load %a
%5= mod %4, 998244353
ret %5
%merge1:
@cur = alloc i32 
%6= load %a
%7= load %b
%8= div %7, 2
%9= call @multiply(%6,%8)
store %9, @cur

%10= load @cur
%11= load @cur
%12= add %10, %11
%13= mod %12, 998244353
store %13, @cur
%14= load %b
%15= mod %14, 2
%16= eq %15, 1
br %16, %then2, %else2

%then2:
%17= load @cur
%18= load %a
%19= add %17, %18
%20= mod %19, 998244353
ret %20
%else2:
%21= load @cur
ret %21
 }
fun @power(@a: i32 , @b: i32 ) : i32 { 
%entry:
%a= alloc i32
store @a, %a
%b= alloc i32
store @b, %b
%22= load %b
%23= eq %22, 0
br %23, %then3, %merge3

%then3:
ret 1
%merge3:
@cur = alloc i32 
%24= load %a
%25= load %b
%26= div %25, 2
%27= call @power(%24,%26)
store %27, @cur

%28= load @cur
%29= load @cur
%30= call @multiply(%28,%29)
store %30, @cur
%31= load %b
%32= mod %31, 2
%33= eq %32, 1
br %33, %then4, %else4

%then4:
%34= load @cur
%35= load %a
%36= call @multiply(%34,%35)
ret %36
%else4:
%37= load @cur
ret %37
 }
global @__filed0__temp = alloc [i32, 2097152], zeroinit
global @__filed0__a = alloc [i32, 2097152], zeroinit
global @__filed0__b = alloc [i32, 2097152], zeroinit
global @__filed0__c = alloc [i32, 2097152], zeroinit
fun @MemMove(@dst: *i32, @dst_pos: i32 , @src: *i32, @len: i32 ) : i32 { 
%entry:
%dst_pos= alloc i32
store @dst_pos, %dst_pos
%len= alloc i32
store @len, %len
@i = alloc i32 
store 0, @i

jump %while_entry0
%while_entry0:
%38= load @i
%39= load %len
%40= lt %38, %39
br %40, %while_body0, %while_end0

%while_body0:
%41= load %dst_pos
%42= load @i
%43= add %41, %42
%ptr0 = getptr @dst, %43
%44= load @i
%ptr1 = getptr @src, %44
%45 = load %ptr1
store %45, %ptr0
%46= load @i
%47= add %46, 1
store %47, @i
jump %while_entry0
%while_end0:
%48= load @i
ret %48
 }
fun @fft(@arr: *i32, @begin_pos: i32 , @n: i32 , @w: i32 ) : i32 { 
%entry:
%begin_pos= alloc i32
store @begin_pos, %begin_pos
%n= alloc i32
store @n, %n
%w= alloc i32
store @w, %w
%49= load %n
%50= eq %49, 1
br %50, %then5, %merge5

%then5:
ret 1
%merge5:
@i = alloc i32 
store 0, @i

jump %while_entry1
%while_entry1:
%51= load @i
%52= load %n
%53= lt %51, %52
br %53, %while_body1, %while_end1

%while_body1:
%54= load @i
%55= mod %54, 2
%56= eq %55, 0
br %56, %then6, %else6

%then6:
%57= load @i
%58= div %57, 2
%ptr2 = getelemptr @__filed0__temp, %58
%59= load @i
%60= load %begin_pos
%61= add %59, %60
%ptr3 = getptr @arr, %61
%62 = load %ptr3
store %62, %ptr2
jump %merge6
%else6:
%63= load %n
%64= div %63, 2
%65= load @i
%66= div %65, 2
%67= add %64, %66
%ptr4 = getelemptr @__filed0__temp, %67
%68= load @i
%69= load %begin_pos
%70= add %68, %69
%ptr5 = getptr @arr, %70
%71 = load %ptr5
store %71, %ptr4
jump %merge6
%merge6:
%72= load @i
%73= add %72, 1
store %73, @i
jump %while_entry1
%while_end1:
%74= getptr @arr, 0
%75= load %begin_pos
%76= getelemptr @__filed0__temp, 0
%77= load %n
%78= call @MemMove(%74,%75,%76,%77)
%79= getptr @arr, 0
%80= load %begin_pos
%81= load %n
%82= div %81, 2
%83= load %w
%84= load %w
%85= call @multiply(%83,%84)
%86= call @fft(%79,%80,%82,%85)
%87= getptr @arr, 0
%88= load %begin_pos
%89= load %n
%90= div %89, 2
%91= add %88, %90
%92= load %n
%93= div %92, 2
%94= load %w
%95= load %w
%96= call @multiply(%94,%95)
%97= call @fft(%87,%91,%93,%96)
store 0, @i
@wn = alloc i32 
store 1, @wn

jump %while_entry2
%while_entry2:
%98= load @i
%99= load %n
%100= div %99, 2
%101= lt %98, %100
br %101, %while_body2, %while_end2

%while_body2:
@__filed7__x = alloc i32 
%102= load %begin_pos
%103= load @i
%104= add %102, %103
%ptr6 = getptr @arr, %104
%105 = load %ptr6
store %105, @__filed7__x

@__filed7__y = alloc i32 
%106= load %begin_pos
%107= load @i
%108= add %106, %107
%109= load %n
%110= div %109, 2
%111= add %108, %110
%ptr7 = getptr @arr, %111
%112 = load %ptr7
store %112, @__filed7__y

%113= load %begin_pos
%114= load @i
%115= add %113, %114
%ptr8 = getptr @arr, %115
%116= load @__filed7__x
%117= load @wn
%118= load @__filed7__y
%119= call @multiply(%117,%118)
%120= add %116, %119
%121= mod %120, 998244353
store %121, %ptr8
%122= load %begin_pos
%123= load @i
%124= add %122, %123
%125= load %n
%126= div %125, 2
%127= add %124, %126
%ptr9 = getptr @arr, %127
%128= load @__filed7__x
%129= load @wn
%130= load @__filed7__y
%131= call @multiply(%129,%130)
%132= sub %128, %131
%133= add %132, 998244353
%134= mod %133, 998244353
store %134, %ptr9
%135= load @wn
%136= load %w
%137= call @multiply(%135,%136)
store %137, @wn
%138= load @i
%139= add %138, 1
store %139, @i
jump %while_entry2
%while_end2:
ret 0
 }
fun @main() : i32 { 
%entry:
@n = alloc i32 
%140= getelemptr @__filed0__a, 0
%141= call @getarray(%140)
store %141, @n

@m = alloc i32 
%142= getelemptr @__filed0__b, 0
%143= call @getarray(%142)
store %143, @m

call @starttime()
store 1, @__filed0__d
jump %while_entry3
%while_entry3:
%144= load @__filed0__d
%145= load @n
%146= load @m
%147= add %145, %146
%148= sub %147, 1
%149= lt %144, %148
br %149, %while_body3, %while_end3

%while_body3:
%150= load @__filed0__d
%151= mul %150, 2
store %151, @__filed0__d
jump %while_entry3
%while_end3:
%152= getelemptr @__filed0__a, 0
%153= add 0, 0
%154= load @__filed0__d
%155= add 0, 3
%156= load @__filed0__d
%157= div 998244352, %156
%158= call @power(%155,%157)
%159= call @fft(%152,%153,%154,%158)
%160= getelemptr @__filed0__b, 0
%161= add 0, 0
%162= load @__filed0__d
%163= add 0, 3
%164= load @__filed0__d
%165= div 998244352, %164
%166= call @power(%163,%165)
%167= call @fft(%160,%161,%162,%166)
@i = alloc i32 
store 0, @i

jump %while_entry4
%while_entry4:
%168= load @i
%169= load @__filed0__d
%170= lt %168, %169
br %170, %while_body4, %while_end4

%while_body4:
%171= load @i
%ptr10 = getelemptr @__filed0__a, %171
%172= load @i
%ptr11 = getelemptr @__filed0__a, %172
%173 = load %ptr11
%174= load @i
%ptr12 = getelemptr @__filed0__b, %174
%175 = load %ptr12
%176= call @multiply(%173,%175)
store %176, %ptr10
%177= load @i
%178= add %177, 1
store %178, @i
jump %while_entry4
%while_end4:
%179= getelemptr @__filed0__a, 0
%180= add 0, 0
%181= load @__filed0__d
%182= add 0, 3
%183= load @__filed0__d
%184= div 998244352, %183
%185= sub 998244352, %184
%186= call @power(%182,%185)
%187= call @fft(%179,%180,%181,%186)
store 0, @i
jump %while_entry5
%while_entry5:
%188= load @i
%189= load @__filed0__d
%190= lt %188, %189
br %190, %while_body5, %while_end5

%while_body5:
%191= load @i
%ptr13 = getelemptr @__filed0__a, %191
%192= load @i
%ptr14 = getelemptr @__filed0__a, %192
%193 = load %ptr14
%194= load @__filed0__d
%195= add 0, 998244351
%196= call @power(%194,%195)
%197= call @multiply(%193,%196)
store %197, %ptr13
%198= load @i
%199= add %198, 1
store %199, @i
jump %while_entry5
%while_end5:
call @stoptime()
%200= load @n
%201= load @m
%202= add %200, %201
%203= sub %202, 1
%204= getelemptr @__filed0__a, 0
call @putarray(%203,%204)
ret 0
 }
